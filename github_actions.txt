Key elements: Workflows, Jobs, Steps

Workflows:
    - Attached to a github repository.
    - Contains one or more Jobs
    - Triggered upon Events

Jobs:
    - Define a Runner (Execution environment)
    - Contains one or more Steps
    - Run in parallel(default) or sequential
    - Can be conditional

Steps:
    - Execute a shell script or an action
    -  Can use custom or third party actions
    - Steps are executed in order
    - can be conditional

In public repositories, you can use GitHub Actions for free. For private repositories, only a certain amount of monthly usage is available for free - extra usage on top must be paid.

The exact quotas and payment details depend on your GitHub plan, a detailed summary can be found here: https://docs.github.com/en/billing/managing-billing-for-github-actions/about-billing-for-github-actions

If you can't find an "Actions" tab in your GitHub repository, you can should enable them as described here: https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository



Running Multi-Line Shell Commands
Thus far, you learned how to run simple shell commands like echo "Something" via run: echo "Something".

If you need to run multiple shell commands (or multi-line commands, e.g., for readability), you can easily do so by adding the pipe symbol (|) as a value after the run: key.

Like this:

...
run: |
    echo "First output"
    echo "Second output"
This will run both commands in one step.

Events (Workflow triggers)
* Repository related:
    - push : push a commit
    - pull_request: pull request action(opened, closed)
    - create: a branch or tag was created
    - fork: repository was forked
    - issues: an isue was opened, deleted
    - issue_comment: issue or pull request comment action
    - watch: repository was started
    - discussion: discussion action (created, deleted)

* Other:
    Workflow_dispatch:
        - manually trigger workflow

    repository_dispatch:
        - REST API request triggers workflow

    schedule:
        - Workflow is scheduled

    workflow_call:
        - can be called by other Workflows.